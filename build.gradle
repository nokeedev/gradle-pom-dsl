import com.sun.istack.internal.Nullable

import java.text.SimpleDateFormat

plugins {
    id 'dev.gradleplugins.groovy-gradle-plugin'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
}

group = 'dev.nokee'
version = '1.0'

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
    maven { url = uri("https://dl.bintray.com/gradle-plugins/distributions") }
}

sourceSets {
	docsTest
}
tasks.register("docsTest", Test) {
	dependsOn('publishToMavenLocal')
	group = LifecycleBasePlugin.VERIFICATION_GROUP
	classpath = sourceSets.docsTest.runtimeClasspath
	testClassesDirs = sourceSets.docsTest.getOutput().getClassesDirs()
}
configurations {
	docsTestImplementation.extendsFrom(testImplementation)
}

dependencies {
    compileOnly 'org.codehaus.groovy:groovy-all:2.5.8'
	compileOnly 'dev.gradleplugins:gradle-api:6.2.2'
	def lombokVersion = '1.18.12'
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	implementation 'org.apache.maven:maven-model:3.6.3'

	testImplementation('dev.gradleplugins:gradle-fixtures:latest.integration') {
		capabilities {
			requireCapability('dev.gradleplugins:gradle-fixtures-spock-support')
		}
	}
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
	docsTestImplementation gradleTestKit() // TODO: Should not be needed

	// TODO: Should be coming from gradle-fixtures
	functionalTestImplementation 'com.google.guava:guava:28.2-jre'
	functionalTestImplementation 'org.apache.ant:ant:1.9.13'
}

gradlePlugin {
    plugins {
        pomDslPlugin {
            id = 'dev.nokee.pom-dsl'
            implementationClass = 'dev.nokee.dsl.pom.internal.plugins.ProjectObjectModelDslPlugin'
        }
    }
}

@Nullable
private String resolveProperty(Project project, String envVarKey, String projectPropKey) {
	Object propValue = System.getenv().get(envVarKey);

	if (propValue != null) {
		return propValue.toString();
	}

	propValue = project.findProperty(projectPropKey);
	if (propValue != null) {
		return propValue.toString();
	}

	return null;
}

afterEvaluate {
	bintray {
		user = resolveProperty(project, "BINTRAY_USER", "dev.nokee.bintray.user")
		key = resolveProperty(project, "BINTRAY_KEY", "dev.nokee.bintray.key")
		publications = publishing.publications.collect { it.name }

		publish = true
		override = false
		pkg {
			repo = 'distributions'
			name = 'dev.nokee:gradle-pom-dsl'
			desc = project.description
			userOrg = 'nokeedev'
			websiteUrl = 'https://nokee.dev/blog/maven-pom-dsl'
			issueTrackerUrl = 'https://github.com/nokeedev/gradle-pom-dsl/issues'
			vcsUrl = 'https://github.com/nokeedev/gradle-pom-dsl.git'
			labels = ['gradle', 'pom', 'maven', 'pom-dsl']
			licenses = ['MIT']
			publicDownloadNumbers = false

			version {
				attributes = ['gradle-plugin': ["dev.nokee.pom-dsl:${project.group}:${project.name}"]]
				released = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZZ").format(new Date())
			}
		}
	}
}
